/**
 * 大二十面体
 */
class Great_Icosahedron_Shift {
    configure = () => {
        const { getLengthByPytha } = this.basis.geometry_calculator;

        // 五芒星比率
        // import RA_00 from "../module/ratio_five_pointed_star.js";
        const RA_00 = (1 + Math.sqrt(5)) / 2;

        // 正三角形比率
        // import RA_01 from "../module/ratio_equilateral_triangle.js";
        const RA_01 = {
            A: 1,
            B: Math.sqrt(3),
            C: 2
        };

        // 正五角形比率
        // import RA_02 from "../module/ratio_regular_pentagon.js";
        const RA_02 = (1 + Math.sqrt(5)) / 4;

        // [多面体の中心点]O00
        // [視点からの左右方向の軸]X軸
        // [視点からの上下方向の軸]Y軸
        // [視点からの前後方向の軸]Z軸
        // [点名の規則(原点)](大文字英字)(数字)
        // [点名の規則(原点に対する[多面体の中心点における対称点])](子文字英字)(数字)
        // [各点のX軸面上の透過点]X_(点名)
        // [各点のZ軸面上の透過点]Z_(点名)
        // [Z軸に垂直な[多面体の頂点から構成される最大の正五角形]]A11_A12_A13_A14_A15
        // [五角形A11_A12_A13_A14_A15]を含む面]A
        // [Z軸・面Aの交点]A00
        // [A12_A15と[Z軸上の点]B00で構成される正三角形]△A11_A13_B00
        // [△A12_A15_B00の重心]X11
        // [A12_A14・A13_15の交点]A21
        // [A11_A14・A13_15の交点]A22
        // [A11_A14・A12_15の交点]A23
        // [A11_A13・A12_15の交点]A24
        // [A11_A13・A12_14の交点]A25
        // [A13_A14の中点]A31
        // [A14_A15の中点]A32
        // [A11_A15の中点]A33
        // [A11_A12の中点]A34
        // [A12_A13の中点]A35
        // [A11_A31・A12_A15の交点]A41
        // [A12_A32・A11_A13の交点]A42
        // [A13_A33・A12_A14の交点]A43
        // [A14_A34・A13_A15の交点]A44
        // [A15_A35・A11_A14の交点]A45
        const B00_X11 = 1;
        const A12_X11 = B00_X11;
        const A12_A41 = A12_X11 * (RA_01.B / RA_01.C);
        const A12_A15 = A12_A41 * 2;
        const A12_A23 = A12_A15 / RA_00;
        const A12_A21 = A12_A23;
        const A21_A41 = getLengthByPytha(A12_A21, A12_A41, null);
        // (01) A11_A12 // A15_A21
        // (02) A11_A15 // A12_A21
        // (03) A11_A12 = A11_A15
        // (04) (01)(02)(03)より 四角形A11_A12_A21_A15は菱形
        // (05) (04)より A11_A41 = A21_A41
        const A11_A41 = A21_A41;
        // (06) △A12_A21_A41 ∽ △A14_A21_A31
        // (07) A12_A21 = A14_A21 * 五芒星比率
        // (08) (06)(07)より A21_A31 = A21_A41 / 五芒星比率
        const A21_A31 = A21_A41 / RA_00;
        const A31_A41 = A21_A41 + A21_A31;
        // (09) △A00_A24_A41 ∽ △A00_A14_A31
        // (10) A23_A24 = A12_A24 / 五芒星比率
        const A23_A24 = A12_A23 / (1 + RA_00);
        // (11) A12_A23 = A13_A14
        // (12) (10)(11)より A24_A41 = A14_A31 / (1 + 五芒星比率)
        // (13) (09)(12)より A00_A41 = A31_A41 / (2 + 五芒星比率)
        const A00_A41 = A31_A41 / (2 + RA_00);
        const A00_A11 = A00_A41 + A11_A41;
        // (13.01) (06)(08)
        // (13.01) △A00_A11_A33 ∽ △A00_A21_43
        // (13.02) (13.01)より A00_A21 = (A00_A11 / 五芒星比率) / 2
        const A11_B00 = A12_A15;
        const A00_B00 = getLengthByPytha(A11_B00, A00_A11, null);
        // [O00からのA11_B11への垂線・A11_B11との交点]X21
        // (14) O00_A11 = O00_B00
        // (15) (14)より △O00_A11_X21 ≡ △O00_B00_X21
        // (16) (15)より A11_X21 = B00_X21 = A11_B00 / 2
        const A11_X21 = A11_B00 / 2;
        const B00_X21 = A11_X21;
        // (17) △O00_B00_X21 ∽ △A11_B00_A00
        // (18) (17)より O00_B00 = A11_B00 * (B00_X21 / A00_B00)
        const O00_B00 = A11_B00 * (B00_X21 / A00_B00);
        const O00_A11 = O00_B00;
        const O00_A00 = getLengthByPytha(O00_A11, A00_A11, null);
        const A00_A21 = A21_A41 - A00_A41;
        const O00_A21 = getLengthByPytha(null, A00_A21, O00_A00);
        // [A21_B00・a24_D12の交点]C11
        // [A22_B00・a25_D13の交点]C12
        // [A23_B00・a21_D14の交点]C13
        // [A24_B00・a22_D15の交点]C14
        // [A25_B00・a23_D11の交点]C15
        // [五角形C11_C12_C13_C14_C15]を含む面]C
        // [Z軸・面Cの交点]C00
        // [Za12_Za15・ZA13_ZD12の交点]ZX31
        // (19) △Za12_ZX31_ZD12 ∽ △Za12_Za15_ZA12
        // (20) Za41_ZX31 = Za41_Za12 / 五芒星比率
        // (21) (20)より ZD12_ZX31 = (ZA12_Za15 / 2) * (1 + (1 / 五芒星比率))
        // (22) (19)(21)より Za12_ZX31 = (ZA12_Za15 / 2) * (1 + (1 / 五芒星比率))
        // (23) ZA12_Za15 = A00_A41 * 2
        // (24) (22)(23)より ZD12_ZX31 = A00_A41 * (1 + (1 / 五芒星比率))
        const ZD12_ZX31 = A00_A41 * (1 + (1 / RA_00));
        // (25) △Za24_Za41_ZC11 ∽ △Za24_ZX31_ZD12
        // (26) Za23_Za24 = Za24_ZX31 / (1 + 五芒星比率)
        // (27) (25)(26)より Za41_ZC11 = ZD12_ZX31 / (2 + 五芒星比率)
        const Za41_ZC11 = ZD12_ZX31 / (2 + RA_00);
        const ZB00_ZA21 = A00_A41 / RA_02;
        const ZB00_ZC11 = A00_A41 - Za41_ZC11;
        const O00_C00 = O00_B00 - ((O00_A00 + O00_B00) * (ZB00_ZC11 / ZB00_ZA21));
        const C00_C11 = ZB00_ZC11;
        const O00_C11 = getLengthByPytha(null, O00_C00, C00_C11);
        // [A12_a13・A11_B00の交点]D11
        // [A13_a14・A12_B00の交点]D12
        // [A14_a15・A13_B00の交点]D13
        // [A15_a11・A14_B00の交点]D14
        // [A11_a12・A15_B00の交点]D15
        // [五角形D11_D12_D13_D14_D15]を含む面]D
        // [Z軸・面Dの交点]D00
        // (28) ZA11_Za13 // ZA12_Za12
        // (29) (28)より △ZA11_Za13_ZD11 ∽ △ZB00_ZA12_ZD11
        // (30) ZA11_ZB00 = Za11_ZB00 = A00_A11
        const ZA11_Za11 = A00_A11 * 2;
        // (31) Za11_Za41 = Za41_Za13 = A12_A41
        const Za11_Za13 = A12_A41 * 2;
        const ZA11_Za13 = getLengthByPytha(ZA11_Za11, Za11_Za13, null);
        // (32) (29)より B00_D11 = A11_B00 * (ZA12_ZB00 / (ZA12_ZB00 + ZA11_Za13))
        const ZA12_ZB00 = A00_A11;
        const B00_D11 = A11_B00 * (ZA12_ZB00 / (ZA12_ZB00 + ZA11_Za13));
        // (33) △A00_A11_B00 ∽ △D11_D00_B00
        // (34) (33)より B00_D00 = A00_B00 * (B00_D11 / A11_B00)
        const B00_D00 = A00_B00 * (B00_D11 / A11_B00);
        const O00_D00 = O00_B00 - B00_D00;
        // (35) (33)より D00_D11 = A00_A11 * (B00_D11 / A11_B00)
        const D00_D11 = A00_A11 * (B00_D11 / A11_B00);
        const O00_D11 = getLengthByPytha(null, O00_D00, D00_D11);
        // [a11_D11・a24_d15の交点]E11
        // [a12_D12・a25_d11の交点]E12
        // [a13_D13・a21_d12の交点]E13
        // [a14_D14・a22_d13の交点]E14
        // [a15_D15・a23_d14の交点]E15
        // [五角形E11_E12_E13_E14_E15]を含む面]E
        // [Z軸・面Eの交点]E00
        // (36) △ZA00_Za15_Za41 ∽ △Zd15_Za15_ZX31
        // (37) (20)より Zd15_ZX31 = ZA00_Za41 * (1 - (1 / 五芒星比率))
        const Zd15_ZX31 = A00_A41 * (1 - (1 / RA_00));
        // (38) △Za24_Za41_ZE11 ∽ △Za24_ZX31_Zd15
        // (39) (38)(26)より Za41_ZE11 = Zd15_ZX31 / (2 + 五芒星比率)
        const Za41_ZE11 = Zd15_ZX31 / (2 + RA_00);
        const A00_D00 = O00_A00 + O00_D00;
        const A00_E00 = A00_D00 / (2 + RA_00);
        const O00_E00 = O00_A00 - A00_E00;
        const E00_E11 = A00_A41 - Za41_ZE11;
        const O00_E11 = getLengthByPytha(null, O00_E00, E00_E11);

        // [a21_A24・D11_a23の交点]F11
        // [a22_A25・D12_a24の交点]F12
        // [a23_A21・D13_a25の交点]F13
        // [a24_A22・D14_a21の交点]F14
        // [a25_A23・D15_a22の交点]F15
        // [a21_A23・D11_a24の交点]F16
        // [a22_A24・D12_a25の交点]F17
        // [a23_A25・D13_a21の交点]F18
        // [a24_A21・D14_a22の交点]F19
        // [a25_A22・D15_a23の交点]F1a
        // [五角形F11_F12_F13_F14_F15]を含む面]F
        // [Z軸・面Fの交点]F00
        // [ZA00_ZA11・ZF11_ZF16の交点]ZX41
        // (40) △a21_D11_F11 ∽ △A23_a24_F11
        // (41) (40)より ZF11_ZX41 = A24_A41 * (ZA23_Za24 / (Za21_ZD11 + ZA23_Za24))
        const Za21_ZD11 = D00_D11 - A00_A21;
        const A24_A41 = A23_A24 / 2;
        const ZA23_Za24 = A00_A41 * 2;
        const ZF11_ZX41 = A24_A41 * (Za21_ZD11 / (Za21_ZD11 + ZA23_Za24));
        const Za41_ZD11 = A00_A41 + D00_D11;
        const ZF00_ZX41 = (Za41_ZD11 * (ZA23_Za24 / (Za21_ZD11 + ZA23_Za24))) - A00_A41;
        const F00_F11 = getLengthByPytha(null, ZF11_ZX41, ZF00_ZX41);
        const a00_D00 = O00_A00 - O00_D00;
        const A00_F00 = a00_D00 * (ZA23_Za24 / (Za21_ZD11 + ZA23_Za24));
        const O00_F00 = O00_A00 - A00_F00;
        const O00_F11 = getLengthByPytha(null, F00_F11, O00_F00);

        // [a25_d14・D11_d15の交点]G11
        // [a21_d15・D12_d11の交点]G12
        // [a22_d11・D13_d12の交点]G13
        // [a23_d12・D14_d13の交点]G14
        // [a24_d13・D15_d14の交点]G15
        // [五角形G11_G12_G13_G14_G15]を含む面]G
        // [Z軸・面Gの交点]G00
        // [ZG11からのZA00_ZA11への垂線・ZA00_ZA11との交点]ZX51
        // (42) △ZD11_Zd14_ZG11 ∽ △Zd15_Za25_ZG11
        // (43) ZD11_Za25 // Zd14_ZA00
        // (44) ZD11_Zd14 // Za25_ZA00
        // (45) (43)(44)より 四角形ZA00_Za25_ZD11_Zd14は平行四辺形
        // (46) (45)より ZA00_Za25 = ZD11_Zd14
        // (47) (42)(46)より d14_G11 = d14_a25 * (ZD11_Zd14 / (ZD11_Zd14 + Za25_Zd15))
        const ZD11_Zd14 = A00_A21;
        const Za25_Zd15 = A00_A21 + D00_D11;
        // [ZA00_ZA11・Za22_Za25の交点]ZX52
        // [ZA00_ZA11・Zd13_Zd14の交点]ZX53
        // (48) (45)より Zd14_ZX51 = Zd14_ZX53
        const ZG00_ZX53 = D00_D11 * RA_02;
        const ZA00_ZX52 = A00_A41 * (A00_A21 / A00_A11);
        const Za22_ZX52 = A12_A41 * (A00_A21 / A00_A11);
        const ZG00_ZX51 = ((ZG00_ZX53 - ZA00_ZX52) * (Za25_Zd15 / (ZD11_Zd14 + Za25_Zd15))) + ZA00_ZX52;
        const ZG11_ZX51 = ((Za22_ZX52 * 2) * (Za25_Zd15 / (ZD11_Zd14 + Za25_Zd15))) - Za22_ZX52;
        const G00_G11 = getLengthByPytha(null, ZG00_ZX51, ZG11_ZX51);
        const O00_G00 = ((O00_A00 + O00_D00) * (ZD11_Zd14 / (ZD11_Zd14 + Za25_Zd15))) - O00_D00;
        const O00_G11 = getLengthByPytha(null, G00_G11, O00_G00);

        const TX_O00 = 0;
        const TX_A10 = Math.PI - Math.asin(A00_A11 / O00_A11);
        const TX_A20 = Math.PI - Math.asin(A00_A21 / O00_A21);
        const TX_C10 = Math.asin(C00_C11 / O00_C11);
        const TX_D10 = Math.asin(D00_D11 / O00_D11);
        const TX_E10 = Math.asin(E00_E11 / O00_E11);
        const TX_F10 = Math.asin(F00_F11 / O00_F11);
        const TX_G10 = Math.asin(G00_G11 / O00_G11);

        const TY_A10 = 0;
        const TY_A20 = Math.PI;
        const TY_F10 = Math.asin(ZF11_ZX41 / F00_F11);
        const TY_F11 = Math.asin(ZF11_ZX41 / F00_F11) * -1;
        const TY_G10 = Math.asin(ZG11_ZX51 / G00_G11);
        const TY_G11 = Math.asin(ZG11_ZX51 / G00_G11) * -1;

        const reles_base = [
            { code: "A1", index: 1, R: O00_A11, X: TX_A10, Y: TY_A10 },
            { code: "A2", index: 1, R: O00_A21, X: TX_A20, Y: TY_A20 },
            { code: "B0", index: 0, R: O00_B00, X: TX_O00, Y: TY_A10 },
            { code: "C1", index: 1, R: O00_C11, X: TX_C10, Y: TY_A20 },
            { code: "D1", index: 1, R: O00_D11, X: TX_D10, Y: TY_A10 },
            { code: "E1", index: 1, R: O00_E11, X: TX_E10, Y: TY_A20 },
            { code: "F1", index: 1, R: O00_F11, X: TX_F10, Y: TY_F10 },
            { code: "F1", index: 6, R: O00_F11, X: TX_F10, Y: TY_F11 },
            { code: "G1", index: 1, R: O00_G11, X: TX_G10, Y: TY_G10 },
            { code: "G1", index: 6, R: O00_G11, X: TX_G10, Y: TY_G11 },
        ];

        reles_base.forEach((rel_base) => {
            for (let n = 0; n < 5; n++) {
                const rel_code = `${rel_base.code}${(rel_base.index + n).toString(16)}`;
                const rel = {
                    R: rel_base.R / O00_A11 * this.alpha,
                    X: rel_base.X,
                    Y: rel_base.Y + (Math.PI * 2 / 5 * n),
                };

                this.reles[rel_code] = { ...rel };
                this.reles[rel_code.toLowerCase()] = { ...rel, X: rel_base.X + Math.PI };
            }
        });

        this.surfaces = {
            B00_a21_C13: ["B00", "a21", "C13"], B00_a22_C14: ["B00", "a22", "C14"], B00_a23_C15: ["B00", "a23", "C15"], B00_a24_C11: ["B00", "a24", "C11"], B00_a25_C12: ["B00", "a25", "C12"],
            B00_a21_C14: ["B00", "a21", "C14"], B00_a22_C15: ["B00", "a22", "C15"], B00_a23_C11: ["B00", "a23", "C11"], B00_a24_C12: ["B00", "a24", "C12"], B00_a25_C13: ["B00", "a25", "C13"],
            b00_A21_C13: ["b00", "A21", "c13"], b00_A22_c14: ["b00", "A22", "c14"], b00_A23_c15: ["b00", "A23", "c15"], b00_A24_c11: ["b00", "A24", "c11"], b00_A25_c12: ["b00", "A25", "c12"],
            b00_A21_c14: ["b00", "A21", "c14"], b00_A22_c15: ["b00", "A22", "c15"], b00_A23_c11: ["b00", "A23", "c11"], b00_A24_c12: ["b00", "A24", "c12"], b00_A25_c13: ["b00", "A25", "c13"],

            A21_A22_c24: ["A21", "A22", "c14"], A22_A23_c25: ["A22", "A23", "c15"], A23_A24_c21: ["A23", "A24", "c11"], A24_A25_c22: ["A24", "A25", "c12"], A25_A21_c23: ["A25", "A21", "c13"],
            a21_a22_C24: ["a21", "a22", "C14"], a22_a23_C25: ["a22", "a23", "C15"], a23_a24_C21: ["a23", "a24", "C11"], a24_a25_C22: ["a24", "a25", "C12"], a25_a21_C23: ["a25", "a21", "C13"],

            A23_A24_e11: ["A23", "A24", "e11"], A24_A25_e12: ["A24", "A25", "e12"], A25_A21_e13: ["A25", "A21", "e13"], A21_A22_e14: ["A21", "A22", "e14"], A22_A23_e15: ["A22", "A23", "e15"],
            a23_a24_E11: ["a23", "a24", "E11"], a24_a25_E12: ["a24", "a25", "E12"], a25_a21_E13: ["a25", "a21", "E13"], a21_a22_E14: ["a21", "a22", "E14"], a22_a23_E15: ["a22", "a23", "E15"],

            A11_e11_A23: ["A11", "e11", "A23"], A12_e12_A24: ["A12", "e12", "A24"], A13_e13_A25: ["A13", "e13", "A25"], A14_e14_A21: ["A14", "e14", "A21"], A15_e15_A22: ["A15", "e15", "A22"],
            A11_e11_A24: ["A11", "e11", "A24"], A12_e12_A25: ["A12", "e12", "A25"], A13_e13_A21: ["A13", "e13", "A21"], A14_e14_A22: ["A14", "e14", "A22"], A15_e15_A23: ["A15", "e15", "A23"],
            a11_E11_a23: ["a11", "E11", "a23"], a12_E12_a24: ["a12", "E12", "a24"], a13_E13_a25: ["a13", "E13", "a25"], a14_E14_a21: ["a14", "E14", "a21"], a15_E15_a22: ["a15", "E15", "a22"],
            a11_E11_a24: ["a11", "E11", "a24"], a12_E12_a25: ["a12", "E12", "a25"], a13_E13_a21: ["a13", "E13", "a21"], a14_E14_a22: ["a14", "E14", "a22"], a15_E15_a23: ["a15", "E15", "a23"],

            A21_d11_f11: ["A21", "d11", "f11"], A22_d12_f12: ["A22", "d12", "f12"], A23_d13_f13: ["A23", "d13", "f13"], A24_d14_f14: ["A24", "d14", "f14"], A25_d15_f15: ["A25", "d15", "f15"],
            A21_d11_f16: ["A21", "d11", "f16"], A22_d12_f17: ["A22", "d12", "f17"], A23_d13_f18: ["A23", "d13", "f18"], A24_d14_f14: ["A24", "d14", "f19"], A25_d15_f15: ["A25", "d15", "f1a"],
            a21_D11_F11: ["a21", "D11", "F11"], a22_D12_F12: ["a22", "D12", "F12"], a23_D13_F13: ["a23", "D13", "F13"], a24_D14_F14: ["a24", "D14", "F14"], a25_D15_F15: ["a25", "D15", "F15"],
            a21_D11_F16: ["a21", "D11", "F16"], a22_D12_F17: ["a22", "D12", "F17"], a23_D13_F18: ["a23", "D13", "F18"], a24_D14_F19: ["a24", "D14", "F19"], a25_D15_F1a: ["a25", "D15", "F1a"],

            A11_A23_f13: ["A11", "A23", "f13"], A12_A24_f14: ["A12", "A24", "f14"], A13_A25_f15: ["A13", "A25", "f15"], A14_A21_f11: ["A14", "A21", "f11"], A15_A22_f12: ["A15", "A22", "f12"],
            A11_A24_f19: ["A11", "A24", "f19"], A12_A25_f1a: ["A12", "A25", "f1a"], A13_A21_f16: ["A13", "A21", "f16"], A14_A22_f17: ["A14", "A22", "f17"], A15_A23_f18: ["A15", "A23", "f18"],
            a11_a23_F13: ["a11", "a23", "F13"], a12_a24_F14: ["a12", "a24", "F14"], a13_a25_F15: ["a13", "a25", "F15"], a14_a21_F11: ["a14", "a21", "F11"], a15_a22_F12: ["a15", "a22", "F12"],
            a11_a24_F19: ["a11", "a24", "F19"], a12_a25_F1a: ["a12", "a25", "F1a"], a13_a21_F16: ["a13", "a21", "F16"], a14_a22_F17: ["a14", "a22", "F17"], a15_a23_F18: ["a15", "a23", "F18"],

            A11_d14_f19: ["A11", "d14", "f19"], A12_d15_f1a: ["A12", "d15", "f1a"], A13_d11_f16: ["A13", "d11", "f16"], A14_d12_f17: ["A14", "d12", "f17"], A15_d13_f18: ["A15", "d13", "f18"],
            A11_d13_f13: ["A11", "d13", "f13"], A12_d14_f14: ["A12", "d14", "f14"], A13_d15_f15: ["A13", "d15", "f15"], A14_d11_f11: ["A14", "d11", "f11"], A15_d12_f12: ["A15", "d12", "f12"],
            a11_D14_F19: ["a11", "D14", "F19"], a12_D15_F1a: ["a12", "D15", "F1a"], a13_D11_F16: ["a13", "D11", "F16"], a14_D12_F17: ["a14", "D12", "F17"], a15_D13_F18: ["a15", "D13", "F18"],
            a11_D13_F13: ["a11", "D13", "F13"], a12_D14_F14: ["a12", "D14", "F14"], a13_D15_F15: ["a13", "D15", "F15"], a14_D11_F11: ["a14", "D11", "F11"], a15_D12_F12: ["a15", "D12", "F12"],

            A11_d13_g13: ["A11", "d13", "g13"], A12_d14_g14: ["A12", "d14", "g14"], A13_d15_g15: ["A13", "d15", "g15"], A14_d11_g11: ["A14", "d11", "g11"], A15_d12_g12: ["A15", "d12", "g12"],
            A11_d14_g19: ["A11", "d14", "g19"], A12_d15_g1a: ["A12", "d15", "g1a"], A13_d11_g16: ["A13", "d11", "g16"], A14_d12_g17: ["A14", "d12", "g17"], A15_d13_g18: ["A15", "d13", "g18"],
            a11_D13_G13: ["a11", "D13", "G13"], a12_D14_G14: ["a12", "D14", "G14"], a13_D15_G15: ["a13", "D15", "G15"], a14_D11_G11: ["a14", "D11", "G11"], a15_D12_G12: ["a15", "D12", "G12"],
            a11_D14_G19: ["a11", "D14", "G19"], a12_D15_G1a: ["a12", "D15", "G1a"], a13_D11_G16: ["a13", "D11", "G16"], a14_D12_G17: ["a14", "D12", "G17"], a15_D13_G18: ["a15", "D13", "G18"],

            A11_D11_g13: ["A11", "D11", "g13"], A12_D12_g14: ["A12", "D12", "g14"], A13_D13_g15: ["A13", "D13", "g15"], A14_D14_g11: ["A14", "D14", "g11"], A15_D15_g12: ["A15", "D15", "g12"],
            A13_D13_g16: ["A13", "D13", "g16"], A14_D14_g17: ["A14", "D14", "g17"], A15_D15_g18: ["A15", "D15", "g18"], A11_D11_g19: ["A11", "D11", "g19"], A12_D12_g1a: ["A12", "D12", "g1a"],
            a11_d11_G13: ["a11", "d11", "G13"], a12_d12_G14: ["a12", "d12", "G14"], a13_d13_G15: ["a13", "d13", "G15"], a14_d14_G11: ["a14", "d14", "G11"], a15_d15_G12: ["a15", "d15", "G12"],
            a13_d13_G16: ["a13", "d13", "G16"], a14_d14_G17: ["a14", "d14", "G17"], a15_d15_G18: ["a15", "d15", "G18"], a11_d11_G19: ["a11", "d11", "G19"], a12_d12_G1a: ["a12", "d12", "G1a"],

            D11_d13_g13: ["D11", "d13", "g13"], D12_d14_g14: ["D12", "d14", "g14"], D13_d15_g15: ["D13", "d15", "g15"], D14_d11_g11: ["D14", "d11", "g11"], D15_d12_g12: ["D15", "d12", "g12"],
            D11_d14_g19: ["D11", "d14", "g19"], D12_d15_g1a: ["D12", "d15", "g1a"], D13_d11_g16: ["D13", "d11", "g16"], D14_d12_g17: ["D14", "d12", "g17"], D15_d13_g18: ["D15", "d13", "g18"],
            d11_D13_G13: ["d11", "D13", "G13"], d12_D14_G14: ["d12", "D14", "G14"], d13_D15_G15: ["d13", "D15", "G15"], d14_D11_G11: ["d14", "D11", "G11"], d15_D12_G12: ["d15", "D12", "G12"],
            d11_D14_G19: ["d11", "D14", "G19"], d12_D15_G1a: ["d12", "D15", "G1a"], d13_D11_G16: ["d13", "D11", "G16"], d14_D12_G17: ["d14", "D12", "G17"], d15_D13_G18: ["d15", "D13", "G18"],
        };
    }
}
